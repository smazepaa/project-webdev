{
  "endpoints": [
    {
      "path": "/",
      "methods": [
        {
          "type": "GET",
          "description": "Displays an information about endpoints",
          "response": "A JSON with information on each endpoint (path, method(s),description, response)."
        }
      ]
    },
    {
      "path": "/cookies/set",
      "methods": [
        {
          "type": "GET",
          "description": "Sets a cookie with the specified name and value. Optionally, the cookie can be set as HttpOnly based on a query parameter.",
          "response": "A message indicating the cookie has been set, including the cookie's name, value, and HttpOnly status. If the cookie name or value is not specified, returns an error message.",
          "query parameters": [
            {
              "name": "name",
              "type": "string",
              "description": "The name of the cookie."
            },
            {
              "name": "value",
              "type": "string",
              "description": "The value of the cookie."
            },
            {
              "name": "http_only",
              "type": "boolean",
              "description": "Optional. If set to 'true', marks the cookie as HttpOnly. Defaults to false if not specified."
            }
          ],
          "examples": [
            {
              "request url": "http://localhost:3400/cookies/set?name=Cookie1&value=Cookievalue1",
              "description": "Sets a non-HttpOnly cookie named 'Cookie1' with the value 'Cookievalue1'."
            },
            {
              "request url": "http://localhost:3400/cookies/set?name=Cookie2&value=Cookievalue2&http_only=true",
              "description": "Sets an HttpOnly cookie named 'Cookie2' with the value 'Cookievalue2'."
            }
          ]
        }
      ]
    },
    {
      "path": "/cookies/get/:name",
      "methods": [
        {
          "type": "GET",
          "description": "Retreives the value of a corresponding cookie by its name.",
          "response": "A cookie's value on success and error message on failure",
          "examples": [
            {
              "request url": "http://localhost:3400/cookies/get/Cookie1",
              "description": "Returns the value of a Cookie1 cookie"
            },
            {
              "request url": "http://localhost:3400/cookies/get/Cookie100",
              "description": "Returns 'Cookie not set'"
            }
          ]
        }
      ]
    },
    {
      "path": "/headers/set",
      "methods": [
        {
          "type": "GET",
          "description": "Sets a header with the specified name and value.",
          "response": "A message indicating the header has been set, including the headers's name and value. If name or value is not specified, returns an error message.",
          "query parameters": [
            {
              "name": "name",
              "type": "string",
              "description": "The name of the header."
            },
            {
              "name": "value",
              "type": "string",
              "description": "The value of the header."
            }
          ],
          "examples": [
            {
              "request url": "http://localhost:3400/headers/set?name=Header1&value=HeaderValue1",
              "description": "Sets a header named 'Header1' with the value 'HeaderValue1'."
            }
          ]
        }
      ]
    },
    {
      "path": "/headers/get/:name",
      "methods": [
        {
          "type": "GET",
          "description": "Retreives the value of a corresponding header by its name.",
          "response": "A header's value on success and error message on failure",
          "examples": [
            {
              "request url": "http://localhost:3400/headers/get/Content-Type",
              "description": "Returns the value of a Content-Type header"
            },
            {
              "request url": "http://localhost:3400/headers/get/Header100",
              "description": "Returns 'Header not set'"
            }
          ]
        }
      ]
    },
    {
      "path": "/users",
      "methods": [
        {
          "type": "GET",
          "description": "Retrieves a list of all users from the database.",
          "response": "A JSON with the list of users on success an error message on failure."
        },
        {
          "type": "POST",
          "description": "Creates a new user and adds them to the database.",
          "response": "Returns the 'User Created' message on success or an error message on failure.",
          "request body example": {
            "username": "test user",
            "email": "test@gmail.com",
            "password": "Qwerty123",
            "isAdmin": false
          }
        }
      ]
    },
    {
      "path": "/users/:id",
      "methods": [
        {
          "type": "GET",
          "description": "Fetches information about a specific user identified by their id.",
          "response": "A JSON containing the requested user's information (username, email, password, isAdmin) if found, or an error message if not.",
          "request url example": "http://localhost:3400/users/65c21623c5e21224746928e0"
        },
        {
          "type": "DELETE",
          "description": "Deletes a specific user identified by their id from the JSON database.",
          "response": "A message indicating that the user was deleted on success, or an error message if the user cannot be found.",
          "request url example": "http://localhost:3400/users/65c241be22ba9674c9224174"
        },
        {
          "type": "PUT",
          "description": "Updates the entire information of a specific user identified by their id. This method requires all user information to be provided in the request body.",
          "response": "A message indicating that the user's information was updated on success, or an error message if the update fails.",
          "request url example": "http://localhost:3400/users/65c21623c5e21224746928e0",
          "request body example": {
            "username": "newUsername",
            "email": "newEmail@example.com",
            "password": "newPassword",
            "isAdmin": true
          }
        },
        {
          "type": "PATCH",
          "description": "Updates partial information of a specific user identified by their id. Only the fields to be updated need to be provided in the request body.",
          "response": "A message indicating that the specified user's information was partially updated on success, or an error message if the update fails.",
          "request url example": "http://localhost:3400/users/65c21623c5e21224746928e0",
          "request body example": {
            "email": "updatedEmail@example.com"
          }
        }
      ]
    }
  ]
}